---
name: Ansible Integration Test
on:
  workflow_call:
    inputs:
      targets:
        required: true
        type: string
      ansible-core-versions:
        required: false
        default: '["stable-2.14"]'
        type: string
      target-python-versions:
        required: false
        default: '["default"]'
        type: string

jobs:
  ansible-test-integration:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targets: ${{ fromJson(inputs.targets) }}
        ansible-core-versions: ${{ fromJson(inputs.ansible-core-versions) }}
        target-python-versions: ${{ fromJson(inputs.target-python-versions) }}

    name: "${{ matrix.targets.name }}-${{ matrix.ansible-core-versions }}"
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download
        uses: actions/download-artifact@v3
        with:
          name: ansible-test-molecule
          path: tests/integration/targets/

      - name: debug
        run: |
          ls
          pwd
          tree
          chmod +x tests/integration/targets/molecule-*/runme.sh

      - name: "Perform ${{ matrix.targets.test }} integration test with ansible-test"
        uses: ansible-community/ansible-test-gh-action@release/v1
        with:
          # collection-src-directory: .
          ansible-core-version: ${{ matrix.ansible-core-versions }}
          target-python-version: ${{ matrix.target-python-versions }}
          controller-python-version: auto
          docker-image: "--docker-privileged"  # Workaround because ansible-test action doesn't support setting privileged flag
          testing-type: integration
          target: ${{ matrix.targets.test }}
          pre-test-cmd: |
            set -x
            curl -L -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" https://github.com/gardar/ansible-test-molecule/releases/download/${RUNME_VERSION}/ansible-test-molecule.sh -o ansible-test-molecule.sh
            for dir in $(find roles -type d -name 'molecule'); do
              role=$(basename $(dirname $dir))
              for test in $(ls $dir); do
                new_dir="tests/integration/targets/molecule-${role}-${test}"
                echo "Creating directory: ${new_dir}"
                mkdir -p $new_dir
                cp ansible-test-molecule.sh ${new_dir}/runme.sh
                chmod +x ${new_dir}/runme.sh
              done
            done
          # coverage: never  # https://github.com/ansible-community/ansible-test-gh-action/pull/50
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          RUNME_VERSION: 0.1.3
