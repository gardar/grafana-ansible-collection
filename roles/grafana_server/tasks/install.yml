---
- name: "Remove conflicting grafana packages"
  ansible.builtin.package:
    name: grafana-data
    state: absent

- name: "Install dependencies"
  ansible.builtin.package:
    name: "{{ _grafana_dependencies }}"
    state: present
    update_cache: true
  when: "(_grafana_dependencies | default())"

- name: "Add Grafana repository file [RHEL/CentOS]"
  ansible.builtin.template:
    src: "{{ grafana_yum_repo_template }}"
    dest: "/etc/yum.repos.d/{{ grafana_yum_repo_template | basename | regex_replace('\\.j2$', '') }}"
    force: true
    backup: true
    mode: "0644"
  when:
    - "ansible_pkg_mgr in ['yum', 'dnf']"
    - grafana_manage_repo

- name: "Install Grafana repository"
  when:
    - "ansible_pkg_mgr == 'apt'"
    - "grafana_manage_repo"
  environment: "{{ grafana_environment }}"
  block:
    - name: "Import Grafana GPG signing key [Debian/Ubuntu]"
      ansible.builtin.apt_key:
        url: "https://packages.grafana.com/gpg.key"
        state: present
        validate_certs: false
      register: __add_apt_key
      until: "__add_apt_key is succeeded"
      retries: 5
      delay: 2

    - name: "Add Grafana repository [Debian/Ubuntu]"
      ansible.builtin.apt_repository:
        repo: "deb https://packages.grafana.com/oss/deb stable main"
        state: present
        update_cache: true
      register: __update_apt_cache
      until: "__update_apt_cache is succeeded"
      retries: 5
      delay: 2

- name: "Install Grafana"
  ansible.builtin.package:
    name: "{{ grafana_package }}"
    state: "{{ (grafana_version == 'latest') | ternary('latest', 'present') }}"
  register: __install_packages
  until: "__install_packages is succeeded"
  retries: 5
  delay: 2
  notify: restart_grafana
